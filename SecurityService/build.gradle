plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.4'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

ext {
    set('netflixDgsVersion', "10.0.4")
    set('springCloudVersion', "2024.0.0")
}

dependencies {
    // ✅ Spring Boot Starters
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-data-rest'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb' // ✅ MongoDB Starter

    // ✅ Spring Cloud & Netflix Eureka
    implementation 'org.springframework.cloud:spring-cloud-starter-config'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

    // ✅ GraphQL with Netflix DGS
    implementation 'com.netflix.graphql.dgs:graphql-dgs-spring-graphql-starter'

    // ✅ JWT Authentication
    implementation 'io.jsonwebtoken:jjwt:0.9.1'
    implementation 'com.auth0:java-jwt:3.4.1'

    // ✅ Lombok (for cleaner code)
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // ✅ Development Tools
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // ✅ Testing
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'com.netflix.graphql.dgs:graphql-dgs-spring-graphql-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    

    //mail
    implementation 'org.springframework.boot:spring-boot-starter-mail'

    
    



}

dependencyManagement {
    imports {
        mavenBom "org.springframework.boot:spring-boot-dependencies:3.4.3"
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        mavenBom "com.netflix.graphql.dgs:graphql-dgs-platform-dependencies:${netflixDgsVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
